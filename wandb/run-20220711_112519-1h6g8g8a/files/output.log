theta_i tensor([[0., 0., 0., 0.]])
MyRBF received 9 use_ard True
acq_diff 0.7189468741416931
acq_diff 0.2417842149734497
/home/q123/miniconda3/envs/boptim/lib/python3.10/site-packages/gpytorch/lazy/lazy_tensor.py:1741: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at  ../aten/src/ATen/native/BatchLinearAlgebra.cpp:1672.)
  Linv = torch.triangular_solve(Eye, L, upper=False).solution
/home/q123/Desktop/explo/src/optimizers/gibo.py:198: UserWarning: The use of `x.T` on tensors of dimension other than 2 to reverse their shape is deprecated and it will throw an error in a future release. Consider `x.mT` to transpose batches of matricesor `x.permute(*torch.arange(x.ndim - 1, -1, -1))` to reverse the dimensions of a tensor. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2318.)
  a1 = self.model.covar_module.mlp(new_x,kernel_states).squeeze().T
acq_diff 0.23188555240631104
acq_diff 0.11378204822540283
acq_diff 0.11338400840759277
acq_diff 0.06657910346984863
acq_diff 0.06466007232666016
theta_i tensor([[-0.1000, -0.1000,  0.1000,  0.1000]])
MyRBF received 133 use_ard True
acq_diff 0.0008973474614322186
acq_diff 0.0007706941105425358
acq_diff 0.0007514259777963161
acq_diff 0.000681702047586441
acq_diff 0.0006938297301530838
acq_diff 0.0005887830629944801
acq_diff 0.000574047677218914
theta_i tensor([[-0.0465, -0.1860,  0.1996,  0.1954]])
MyRBF received 86 use_ard True
acq_diff 0.34754133224487305
acq_diff 0.24122047424316406
acq_diff 0.1768810749053955
acq_diff 0.1364455223083496
acq_diff 0.12437033653259277
acq_diff 0.10787463188171387
acq_diff 0.10071754455566406
current 0.09800001233816147 / max 1.0 /batch_mean 0.11900001764297485 /batch_max 0.14000001549720764
##############################
covar_lengthscale max 199.99021911621094 / min 0.05711124837398529                      covar_outputscale 0.047270894050598145                     noise 0.10000020265579224
##############################
MLL : -0.12872444093227386
grad_mean : max 1.3433122634887695 /  min 0.3201294243335724
grad_covar : max 9.999999717180685e-10 /  min 9.999999717180685e-10
theta_i tensor([[ 0.0217, -0.1689,  0.2716,  0.2813]])
MyRBF received 500 use_ard True
acq_diff 3.0415480978263076e-07
acq_diff 2.647686869750032e-07
breaking info gathering after 3 steps
theta_i tensor([[ 0.0775, -0.1549,  0.3307,  0.3518]])
MyRBF received 97 use_ard True
acq_diff 19.31208038330078
acq_diff 15.7967529296875
acq_diff 21.937602996826172
acq_diff 17.6668701171875
acq_diff 13.207542419433594
acq_diff 18.898338317871094
acq_diff 15.520523071289062
current 1.0 / max 1.0 /batch_mean 1.0 /batch_max 1.0
##############################
covar_lengthscale max 185.3864288330078 / min 0.010006398893892765                      covar_outputscale 0.009999999776482582                     noise 0.10000021010637283
##############################
MLL : -0.3331184983253479
grad_mean : max 9.520727157592773 /  min 1.8075804710388184
grad_covar : max 9.999999717180685e-10 /  min 9.999999717180685e-10
theta_i tensor([[ 0.1349, -0.0998,  0.3931,  0.4217]])
MyRBF received 500 use_ard True
acq_diff 7.56415090563678e-08
acq_diff 5.162399929758976e-08
breaking info gathering after 3 steps
theta_i tensor([[ 0.1844, -0.0523,  0.4469,  0.4820]])
MyRBF received 195 use_ard True
acq_diff 0.4253424406051636
acq_diff 0.4140580892562866
acq_diff 0.3736279010772705
acq_diff 0.362821102142334
acq_diff 0.32231903076171875
acq_diff 0.3208479881286621
acq_diff 0.2892642021179199
current 0.5400000810623169 / max 1.0 /batch_mean 0.4140000343322754 /batch_max 0.5400000810623169
##############################
covar_lengthscale max 200.0 / min 0.01984102465212345                      covar_outputscale 0.009999999776482582                     noise 0.10000017285346985
##############################
MLL : -0.1292738914489746
grad_mean : max 1.5250422954559326 /  min -0.22250810265541077
grad_covar : max 0.5377342104911804 /  min 9.999999717180685e-10
theta_i tensor([[ 0.2381, -0.0091,  0.4875,  0.5336]])
MyRBF received 185 use_ard True
acq_diff 6.42551326751709
acq_diff 6.983165740966797
acq_diff 5.866455078125
acq_diff 4.544746398925781
acq_diff 3.520305633544922
acq_diff 5.361907958984375
acq_diff 4.501453399658203
theta_i tensor([[0.2378, 0.0112, 0.5428, 0.5896]])
MyRBF received 428 use_ard True
acq_diff 1.4592355910281185e-06
acq_diff 1.2106656868127175e-06
breaking info gathering after 3 steps
current 1.0 / max 1.0 /batch_mean 0.7070000171661377 /batch_max 1.0
##############################
covar_lengthscale max 22.811847686767578 / min 20.344318389892578                      covar_outputscale 0.01000367570668459                     noise 0.10000015050172806
##############################
MLL : -0.1092890128493309
grad_mean : max 8.935166988521814e-05 /  min -0.002642642008140683
grad_covar : max 1.7175790389956092e-06 /  min 9.999999717180685e-10
theta_i tensor([[0.2375, 0.0292, 0.5919, 0.6393]])
MyRBF received 193 use_ard True
acq_diff 4.703842932940461e-07
acq_diff 4.792900654138066e-07
breaking info gathering after 3 steps
Exception in thread ChkStopThr:
Traceback (most recent call last):
  File "/home/q123/miniconda3/envs/boptim/lib/python3.10/threading.py", line 1009, in _bootstrap_inner
    self.run()
  File "/home/q123/miniconda3/envs/boptim/lib/python3.10/threading.py", line 946, in run
    self._target(*self._args, **self._kwargs)
  File "/home/q123/miniconda3/envs/boptim/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 170, in check_status
    status_response = self._interface.communicate_stop_status()
  File "/home/q123/miniconda3/envs/boptim/lib/python3.10/site-packages/wandb/sdk/interface/interface.py", line 127, in communicate_stop_status
    resp = self._communicate_stop_status(status)
  File "/home/q123/miniconda3/envs/boptim/lib/python3.10/site-packages/wandb/sdk/interface/interface_shared.py", line 395, in _communicate_stop_status
    resp = self._communicate(req, local=True)
  File "/home/q123/miniconda3/envs/boptim/lib/python3.10/site-packages/wandb/sdk/interface/interface_shared.py", line 226, in _communicate
    return self._communicate_async(rec, local=local).get(timeout=timeout)
  File "/home/q123/miniconda3/envs/boptim/lib/python3.10/site-packages/wandb/sdk/interface/interface_shared.py", line 231, in _communicate_async
    raise Exception("The wandb backend process has shutdown")
Exception: The wandb backend process has shutdown
Exception in thread NetStatThr:
Traceback (most recent call last):
  File "/home/q123/miniconda3/envs/boptim/lib/python3.10/threading.py", line 1009, in _bootstrap_inner
    self.run()
  File "/home/q123/miniconda3/envs/boptim/lib/python3.10/threading.py", line 946, in run
    self._target(*self._args, **self._kwargs)
  File "/home/q123/miniconda3/envs/boptim/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 152, in check_network_status
    status_response = self._interface.communicate_network_status()
  File "/home/q123/miniconda3/envs/boptim/lib/python3.10/site-packages/wandb/sdk/interface/interface.py", line 138, in communicate_network_status
    resp = self._communicate_network_status(status)
  File "/home/q123/miniconda3/envs/boptim/lib/python3.10/site-packages/wandb/sdk/interface/interface_shared.py", line 405, in _communicate_network_status
    resp = self._communicate(req, local=True)
  File "/home/q123/miniconda3/envs/boptim/lib/python3.10/site-packages/wandb/sdk/interface/interface_shared.py", line 226, in _communicate
    return self._communicate_async(rec, local=local).get(timeout=timeout)
  File "/home/q123/miniconda3/envs/boptim/lib/python3.10/site-packages/wandb/sdk/interface/interface_shared.py", line 231, in _communicate_async
    raise Exception("The wandb backend process has shutdown")
